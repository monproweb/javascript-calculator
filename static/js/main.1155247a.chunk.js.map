{"version":3,"sources":["reportWebVitals.ts","index.tsx","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","isOperator","endsWithOperator","endsWithNegativeSign","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","match","className","Formula","Output","currentValue","Buttons","decimal","evaluate","numbers","operators","href","React","Component","id","onClick","style"],"mappings":"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","file":"static/js/main.1155247a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/* eslint-disable react/jsx-no-target-blank */\n/* eslint-disable no-eval */\nimport React from 'react';\nimport './App.scss';\n\nconst isOperator = /[x/+‑]/,\n  endsWithOperator = /[x+‑/]$/,\n  endsWithNegativeSign = /\\d[x/+‑]{1}‑$/,\n  clearStyle = { background: '#ac3939' },\n  operatorStyle = { background: '#666666' },\n  equalsStyle = {\n    background: '#004466',\n    position: 'absolute',\n    height: 130,\n    bottom: 5\n  };\n\n// COMPONENTS:\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: ''\n    };\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\n    this.handleOperators = this.handleOperators.bind(this);\n    this.handleEvaluate = this.handleEvaluate.bind(this);\n    this.initialize = this.initialize.bind(this);\n    this.handleDecimal = this.handleDecimal.bind(this);\n    this.handleNumbers = this.handleNumbers.bind(this);\n  }\n\n  maxDigitWarning() {\n    this.setState({\n      currentVal: 'Digit Limit Met',\n      prevVal: this.state.currentVal\n    });\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\n  }\n\n  handleEvaluate() {\n    if (!this.state.currentVal.includes('Limit')) {\n      let expression = this.state.formula;\n      while (endsWithOperator.test(expression)) {\n        expression = expression.slice(0, -1);\n      }\n      expression = expression\n        .replace(/x/g, '*')\n        .replace(/‑/g, '-')\n        .replace('--', '+0+0+0+0+0+0+');\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n      this.setState({\n        currentVal: answer.toString(),\n        formula:\n          expression\n            .replace(/\\*/g, '⋅')\n            .replace(/-/g, '‑')\n            .replace('+0+0+0+0+0+0+', '‑-')\n            .replace(/(x|\\/|\\+)‑/, '$1-')\n            .replace(/^‑/, '-') +\n          '=' +\n          answer,\n        prevVal: answer,\n        evaluated: true\n      });\n    }\n  }\n\n  handleOperators(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      const value = e.target.value;\n      const { formula, prevVal, evaluated } = this.state;\n      this.setState({ currentVal: value, evaluated: false });\n      if (evaluated) {\n        this.setState({ formula: prevVal + value });\n      } else if (!endsWithOperator.test(formula)) {\n        this.setState({\n          prevVal: formula,\n          formula: formula + value\n        });\n      } else if (!endsWithNegativeSign.test(formula)) {\n        this.setState({\n          formula:\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\n            value\n        });\n      } else if (value !== '‑') {\n        this.setState({\n          formula: prevVal + value\n        });\n      }\n    }\n  }\n\n  handleNumbers(e) {\n    if (!this.state.currentVal.includes('Limit')) {\n      const { currentVal, formula, evaluated } = this.state;\n      const value = e.target.value;\n      this.setState({ evaluated: false });\n      if (currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (evaluated) {\n        this.setState({\n          currentVal: value,\n          formula: value !== '0' ? value : ''\n        });\n      } else {\n        this.setState({\n          currentVal:\n            currentVal === '0' || isOperator.test(currentVal)\n              ? value\n              : currentVal + value,\n          formula:\n            currentVal === '0' && value === '0'\n              ? formula === ''\n                ? value\n                : formula\n              : /([^.0-9]0|^0)$/.test(formula)\n                ? formula.slice(0, -1) + value\n                : formula + value\n        });\n      }\n    }\n  }\n\n  handleDecimal() {\n    if (this.state.evaluated === true) {\n      this.setState({\n        currentVal: '0.',\n        formula: '0.',\n        evaluated: false\n      });\n    } else if (\n      !this.state.currentVal.includes('.') &&\n      !this.state.currentVal.includes('Limit')\n    ) {\n      this.setState({ evaluated: false });\n      if (this.state.currentVal.length > 21) {\n        this.maxDigitWarning();\n      } else if (\n        endsWithOperator.test(this.state.formula) ||\n        (this.state.currentVal === '0' && this.state.formula === '')\n      ) {\n        this.setState({\n          currentVal: '0.',\n          formula: this.state.formula + '0.'\n        });\n      } else {\n        this.setState({\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.',\n          formula: this.state.formula + '.'\n        });\n      }\n    }\n  }\n\n  initialize() {\n    this.setState({\n      currentVal: '0',\n      prevVal: '0',\n      formula: '',\n      currentSign: 'pos',\n      lastClicked: '',\n      evaluated: false\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"calculator\">\n          <Formula formula={this.state.formula.replace(/x/g, '⋅')} />\n          <Output currentValue={this.state.currentVal} />\n          <Buttons\n            decimal={this.handleDecimal}\n            evaluate={this.handleEvaluate}\n            initialize={this.initialize}\n            numbers={this.handleNumbers}\n            operators={this.handleOperators}\n          />\n        </div>\n        <div className=\"author\">\n          Designed and Coded By <br />\n          <a href=\"https://monproweb.io\" target=\"_blank\">\n            Thomas Erhel\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Buttons extends React.Component {\n  render() {\n    return (\n      <div>\n        <button\n          className=\"jumbo\"\n          id=\"clear\"\n          onClick={this.props.initialize}\n          style={clearStyle}\n          value=\"AC\"\n        >\n          AC\n        </button>\n        <button\n          id=\"divide\"\n          onClick={this.props.operators}\n          style={operatorStyle}\n          value=\"/\"\n        >\n          /\n        </button>\n        <button\n          id=\"multiply\"\n          onClick={this.props.operators}\n          style={operatorStyle}\n          value=\"x\"\n        >\n          x\n        </button>\n        <button id=\"seven\" onClick={this.props.numbers} value=\"7\">\n          7\n        </button>\n        <button id=\"eight\" onClick={this.props.numbers} value=\"8\">\n          8\n        </button>\n        <button id=\"nine\" onClick={this.props.numbers} value=\"9\">\n          9\n        </button>\n        <button\n          id=\"subtract\"\n          onClick={this.props.operators}\n          style={operatorStyle}\n          value=\"‑\"\n        >\n          ‑\n        </button>\n        <button id=\"four\" onClick={this.props.numbers} value=\"4\">\n          4\n        </button>\n        <button id=\"five\" onClick={this.props.numbers} value=\"5\">\n          5\n        </button>\n        <button id=\"six\" onClick={this.props.numbers} value=\"6\">\n          6\n        </button>\n        <button\n          id=\"add\"\n          onClick={this.props.operators}\n          style={operatorStyle}\n          value=\"+\"\n        >\n          +\n        </button>\n        <button id=\"one\" onClick={this.props.numbers} value=\"1\">\n          1\n        </button>\n        <button id=\"two\" onClick={this.props.numbers} value=\"2\">\n          2\n        </button>\n        <button id=\"three\" onClick={this.props.numbers} value=\"3\">\n          3\n        </button>\n        <button\n          className=\"jumbo\"\n          id=\"zero\"\n          onClick={this.props.numbers}\n          value=\"0\"\n        >\n          0\n        </button>\n        <button id=\"decimal\" onClick={this.props.decimal} value=\".\">\n          .\n        </button>\n        <button\n          id=\"equals\"\n          onClick={this.props.evaluate}\n          style={equalsStyle}\n          value=\"=\"\n        >\n          =\n        </button>\n      </div>\n    );\n  }\n}\n\nclass Output extends React.Component {\n  render() {\n    return (\n      <div className=\"outputScreen\" id=\"display\">\n        {this.props.currentValue}\n      </div>\n    );\n  }\n}\n\nclass Formula extends React.Component {\n  render() {\n    return <div className=\"formulaScreen\">{this.props.formula}</div>;\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}